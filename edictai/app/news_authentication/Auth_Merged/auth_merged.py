# -*- coding: utf-8 -*-
"""Auth_Merged.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XlboinaJPJUMfUuL6dz97MMB-Y1aH93r
"""

import requests
import pickle
import re
from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
from sklearn.feature_extraction.text import TfidfVectorizer
import nltk

nltk.download('stopwords')

port_stem = PorterStemmer()
vectorization = TfidfVectorizer()

vector_form = pickle.load(open('vector.pkl', 'rb'))
load_model = pickle.load(open('model.pkl', 'rb'))

def stemming(content):
    con=re.sub('[^a-zA-Z]', ' ', content)
    con=con.lower()
    con=con.split()
    con=[port_stem.stem(word) for word in con if not word in stopwords.words('english')]
    con=' '.join(con)
    return con

def check_news(title):
    url = "https://chatgpt-4-bing-ai-chat-api.p.rapidapi.com/chatgpt-4-bing-ai-chat-api/0.2/send-message/"

    payload = f"bing_u_cookie=1pmI7w_INw4Gy852Hzqt4sDy8PZmBVtgC8FsN96KQl3PIUXoAY-24zmlGx9cDtc-C1j5u_5WJooRfc8gnHHApa_nkEwslZ0vq0hR8RIsxk8ytxZNpac9wp4KKybgMkQxGdUi4s8bUoD_yAocbUw9yYgzkwzHParkvAjdgPrvHI2Hl33-sCssW3796Kh3U9S1rk2xfIHvXIOBe0lGg0NxRMBxs70PYRgn5R0ytFFk_5Ac&question={title} Is this a fake news? Answer 'Yes' or 'No' only"
    headers = {
        "content-type": "application/x-www-form-urlencoded",
        "X-RapidAPI-Key": "4746f8dfa7msh12d29ab1b0cd7d9p186eb2jsne58f90e4151e",
        "X-RapidAPI-Host": "chatgpt-4-bing-ai-chat-api.p.rapidapi.com"
    }

    response = requests.request("POST", url, data=payload, headers=headers)
    response_data = response.json()[0]  # assuming the response contains only one item in the list
    text_response = response_data["text_response"]

    if "fake news" in text_response.lower():
      answer = "No"
    else:
      answer = "Yes"

    if answer == "No":
        return "The news may be true or reliable, but further analysis is required"
    elif answer == "Yes":
        return "The news is fake"
      
    else:
      return "Invalid response from the chatbot"
        

def authenticate_news(news):
    # first, check with the API
    api_result = check_news(news)
    if api_result == "The news is fake":
        return api_result
    else:
        # if the API does not determine the news is fake, use the ML model for further analysis
        news = stemming(news)
        input_data=[news]
        vector_form1=vector_form.transform(input_data)
        prediction = load_model.predict(vector_form1)
        if prediction == [0]:
            return "The news is likely fake"
        else:
            return "The news is likely true or reliable"

title = input("Enter news title: ")
result = authenticate_news(title)
print(result)